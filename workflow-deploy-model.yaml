# Recommender Workflow 2 of 2: Deploy model
#
# Part of the project "Gradient End-to-End: A Recommender System using Notebooks and Workflows"
# at https://docs.paperspace.com/gradient/get-started/tutorials-list/end-to-end-example
# See that URL for instructions on how to use
# This file is called from the Gradient Notebook deep_learning_recommender_tf.ipynb
# A deployed model is output, to which inference data can then be sent in the following section of the Notebook [1]
# The project GitHub repository, which includes this file, is at https://github.com/gradient-ai/Deep-Learning-Recommender-TF
#
# [1] NOTE: The Notebook section in which inference data is to be sent is pending support from the product,
# but is shown there for completeness. Also, on the public cluster, job 2 will fail due to the lack of a --clusterID
# argument. But model deploy support will supersede this.
#
# Last updated: Nov 03rd 2021

defaults:
  resources:
    instance-type: C4
  env:
    PAPERSPACE_API_KEY: secret:api_key_recommender

jobs:

  # 1. Upload model
  #
  # This makes the model visible to the deploy step, and gets its ID
  # The model dataset reference refers to the latest version of the model
  # A particular version of the model can also be specified, via <dataset ID>:<dataset version>

  UploadModel:
    inputs:
      model:
        type: dataset
        with:
          ref: recommender
    outputs:
      model-id:
        type: string
    uses: create-model@v1
    with:
      name: model
      type: Tensorflow

  # 2. Deploy model
  #
  # Creates a deployment in the stopped state
  # NOTE: In future passing the model ID will be better supported, and will not require the "cat" command

  CreateDeployment:
    needs:
      - UploadModel
    inputs:
      model-id: UploadModel.outputs.model-id
    outputs:
       deployment-id:
          type: string
    uses: script@v1
    with:
      script: |-
        cd /inputs
        gradient deployments create \
          --deploymentType TFServing \
          --modelId $(cat /inputs/model-id) \
          --name "Recommender Model" \
          --machineType C5 \
          --imageUrl tensorflow/serving:latest-gpu \
          --instanceCount 1 \
          | awk 'NR==1 {print $NF}' \
          | tee /outputs/deployment-id
      image: paperspace/gradient-sdk

  # 3. Start deployment
  #
  # Start the deployment created in step 2 on an endpoint

  StartDeployment:
    needs:
      - UploadModel
      - CreateDeployment
    inputs:
      model-id: UploadModel.outputs.model-id
      deployment-id: CreateDeployment.outputs.deployment-id
    uses: script@v1
    with:
      script: |-
        gradient deployments start \
          --id $(cat /inputs/deployment-id)
      image: paperspace/gradient-sdk
